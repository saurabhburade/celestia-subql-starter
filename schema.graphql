# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

# type Block @entity {
#   id: ID! # The block hash
#   height: BigInt!
# }

# type Transaction @entity {
#   id: ID!
#   blockHeight: BigInt!
#   timestamp: String!
# }

type Transfers @entity {
  id: ID!
  blockHeight: BigInt
  txHash: String
  fromAddress: String
  toAddress: String
  amount: String
  denomination: String
}

type BlockData @entity {
  id: ID!
  hash: String! @index
  height: Float! @index
  proposer: String!
  totalBlobSize: Float!
  totalSquareSize: Float!

  totalEventsCount: Float!

  totalBlobTransactionCount: Float!

  totalTransactionCount: Float!

  avgTIAPrice: Float!
  currentTIAPrice: Float!
  totalBlockFeeTIA: Float!
  totalBlockFeeUSD: Float!

  timestamp: Float
}
type BlobData @entity {
  id: ID!
  namespaceId: String
  data: String
  shareVersion: String
  namespaceVersion: String
  transaction: TransactionData
  commitment: String
  size: Float
}

type TransactionData @entity {
  id: ID!
  hash: String! @index
  blockHeight: Float! @index
  timestamp: Float!

  signer: String!

  amount: Float!
  denomination: String!

  txFeeTIA: Float!
  nMessages: Float!
  nEvents: Float!
  nDataSubs: Float!
  totalBytes: Float!

  isBlobTransaction: Boolean!
  blobs: [BlobData] @derivedFrom(field: "transaction")
}
